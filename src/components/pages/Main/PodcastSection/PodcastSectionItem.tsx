/**
 * This code was generated by Builder.io.
 */
'use client'
import React from "react";
import { motion } from "framer-motion";
import PodcastInfo from "./PodcastInfo";
import PodcastListenOn from "./PodcastListenOn";
import ImageComponent from "./ImageComponent";

interface PodcastSectionProps {
  title: string;
  description: any;
}

const PodcastSection: React.FC<PodcastSectionProps> = ({
  title,
  description,
}) => {
  return (
    <section className="flex flex-col items-center bg-ramsha-accent pb-20">
      <div className="flex flex-col">
        <div className="flex flex-wrap gap-5 justify-center w-full">
          <div className="relative">
            <div className="grid grid-col md:grid-cols-3 items-start px-5 relative">
              {/* Device Image Animation */}
              <motion.div 
                className="col-span-1 relative"
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ 
                  duration: 0.8,
                  ease: [0.22, 1, 0.36, 1],
                  delay: 0.2
                }}
                viewport={{ once: true }}
              >
                <ImageComponent
                  src="/hero-device.webp"
                  alt="Podcast cover image"
                  className="absolute max-md:hidden left-8 lg:-top-32 object-contain w-full max-w-96 z-20"
                />
              </motion.div>

              {/* Content Card Animation */}
              <motion.div 
                className="relative z-10 h-full md:h-[500px] flex flex-col col-span-2 mt-8 px-9 pt-16 pb-24 md:pb-32 w-full text-center bg-white rounded-3xl border border-black border-solid max-w-[760px] max-md:px-5"
                initial={{ 
                  opacity: 0, 
                  y: 30,
                  scale: 0.95
                }}
                whileInView={{ 
                  opacity: 1, 
                  y: 0,
                  scale: 1
                }}
                transition={{ 
                  duration: 0.8,
                  ease: "easeOut",
                  delay: 0.3
                }}
                viewport={{ once: true }}
              >
                <PodcastInfo title={title} description={description} />
                
                {/* Decorative Element Animation */}
                <ImageComponent
                  src="https://cdn.builder.io/api/v1/image/assets/TEMP/fd81bb596394a17a0566bd8514d403f35b741d16f1d850de00dd82f97f4ec058?placeholderIfAbsent=true&apiKey=3445d620e72b4cd99c6f91e1d18e316a"
                  alt="Decorative element"
                  className="absolute bottom-[-80px] right-[-20px] object-contain z-20 w-40 h-36 aspect-[1.12]"
                />
              </motion.div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default PodcastSection;
